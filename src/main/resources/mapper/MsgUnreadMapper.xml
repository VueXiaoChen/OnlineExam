<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.onlineexam.mapper.MsgUnreadMapper">
  <resultMap id="BaseResultMap" type="com.example.onlineexam.domain.MsgUnread">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="reply" jdbcType="INTEGER" property="reply" />
    <result column="at" jdbcType="INTEGER" property="at" />
    <result column="love" jdbcType="INTEGER" property="love" />
    <result column="system" jdbcType="INTEGER" property="system" />
    <result column="whisper" jdbcType="INTEGER" property="whisper" />
    <result column="dynamic" jdbcType="INTEGER" property="dynamic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `uid`, reply, `at`, love, `system`, whisper, `dynamic`
  </sql>
  <select id="selectByExample" parameterType="com.example.onlineexam.domain.MsgUnreadExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from msg_unread
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from msg_unread
    where `uid` = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from msg_unread
    where `uid` = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.onlineexam.domain.MsgUnreadExample">
    delete from msg_unread
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.onlineexam.domain.MsgUnread">
    insert into msg_unread (`uid`, reply, `at`, 
      love, `system`, whisper, 
      `dynamic`)
    values (#{uid,jdbcType=INTEGER}, #{reply,jdbcType=INTEGER}, #{at,jdbcType=INTEGER}, 
      #{love,jdbcType=INTEGER}, #{system,jdbcType=INTEGER}, #{whisper,jdbcType=INTEGER}, 
      #{dynamic,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.onlineexam.domain.MsgUnread">
    insert into msg_unread
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="reply != null">
        reply,
      </if>
      <if test="at != null">
        `at`,
      </if>
      <if test="love != null">
        love,
      </if>
      <if test="system != null">
        `system`,
      </if>
      <if test="whisper != null">
        whisper,
      </if>
      <if test="dynamic != null">
        `dynamic`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="reply != null">
        #{reply,jdbcType=INTEGER},
      </if>
      <if test="at != null">
        #{at,jdbcType=INTEGER},
      </if>
      <if test="love != null">
        #{love,jdbcType=INTEGER},
      </if>
      <if test="system != null">
        #{system,jdbcType=INTEGER},
      </if>
      <if test="whisper != null">
        #{whisper,jdbcType=INTEGER},
      </if>
      <if test="dynamic != null">
        #{dynamic,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.onlineexam.domain.MsgUnreadExample" resultType="java.lang.Long">
    select count(*) from msg_unread
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update msg_unread
    <set>
      <if test="row.uid != null">
        `uid` = #{row.uid,jdbcType=INTEGER},
      </if>
      <if test="row.reply != null">
        reply = #{row.reply,jdbcType=INTEGER},
      </if>
      <if test="row.at != null">
        `at` = #{row.at,jdbcType=INTEGER},
      </if>
      <if test="row.love != null">
        love = #{row.love,jdbcType=INTEGER},
      </if>
      <if test="row.system != null">
        `system` = #{row.system,jdbcType=INTEGER},
      </if>
      <if test="row.whisper != null">
        whisper = #{row.whisper,jdbcType=INTEGER},
      </if>
      <if test="row.dynamic != null">
        `dynamic` = #{row.dynamic,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update msg_unread
    set `uid` = #{row.uid,jdbcType=INTEGER},
      reply = #{row.reply,jdbcType=INTEGER},
      `at` = #{row.at,jdbcType=INTEGER},
      love = #{row.love,jdbcType=INTEGER},
      `system` = #{row.system,jdbcType=INTEGER},
      whisper = #{row.whisper,jdbcType=INTEGER},
      `dynamic` = #{row.dynamic,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.onlineexam.domain.MsgUnread">
    update msg_unread
    <set>
      <if test="reply != null">
        reply = #{reply,jdbcType=INTEGER},
      </if>
      <if test="at != null">
        `at` = #{at,jdbcType=INTEGER},
      </if>
      <if test="love != null">
        love = #{love,jdbcType=INTEGER},
      </if>
      <if test="system != null">
        `system` = #{system,jdbcType=INTEGER},
      </if>
      <if test="whisper != null">
        whisper = #{whisper,jdbcType=INTEGER},
      </if>
      <if test="dynamic != null">
        `dynamic` = #{dynamic,jdbcType=INTEGER},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.onlineexam.domain.MsgUnread">
    update msg_unread
    set reply = #{reply,jdbcType=INTEGER},
      `at` = #{at,jdbcType=INTEGER},
      love = #{love,jdbcType=INTEGER},
      `system` = #{system,jdbcType=INTEGER},
      whisper = #{whisper,jdbcType=INTEGER},
      `dynamic` = #{dynamic,jdbcType=INTEGER}
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
</mapper>