<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.onlineexam.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.onlineexam.domain.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="background" jdbcType="VARCHAR" property="background" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="exp" jdbcType="INTEGER" property="exp" />
    <result column="coin" jdbcType="DOUBLE" property="coin" />
    <result column="vip" jdbcType="TINYINT" property="vip" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="role" jdbcType="TINYINT" property="role" />
    <result column="auth" jdbcType="TINYINT" property="auth" />
    <result column="auth_msg" jdbcType="VARCHAR" property="authMsg" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="delete_date" jdbcType="TIMESTAMP" property="deleteDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `uid`, username, `password`, nickname, avatar, background, gender, description, `exp`, 
    coin, vip, `state`, `role`, auth, auth_msg, create_date, delete_date
  </sql>
  <select id="selectByExample" parameterType="com.example.onlineexam.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where `uid` = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where `uid` = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.onlineexam.domain.UserExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.onlineexam.domain.User">
    insert into users (`uid`, username, `password`, 
      nickname, avatar, background, 
      gender, description, `exp`, 
      coin, vip, `state`, `role`, 
      auth, auth_msg, create_date, 
      delete_date)
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{background,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR}, #{exp,jdbcType=INTEGER}, 
      #{coin,jdbcType=DOUBLE}, #{vip,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}, #{role,jdbcType=TINYINT}, 
      #{auth,jdbcType=TINYINT}, #{authMsg,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{deleteDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.onlineexam.domain.User">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="background != null">
        background,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="exp != null">
        `exp`,
      </if>
      <if test="coin != null">
        coin,
      </if>
      <if test="vip != null">
        vip,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="auth != null">
        auth,
      </if>
      <if test="authMsg != null">
        auth_msg,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="deleteDate != null">
        delete_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="background != null">
        #{background,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="exp != null">
        #{exp,jdbcType=INTEGER},
      </if>
      <if test="coin != null">
        #{coin,jdbcType=DOUBLE},
      </if>
      <if test="vip != null">
        #{vip,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=TINYINT},
      </if>
      <if test="auth != null">
        #{auth,jdbcType=TINYINT},
      </if>
      <if test="authMsg != null">
        #{authMsg,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteDate != null">
        #{deleteDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.onlineexam.domain.UserExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="row.uid != null">
        `uid` = #{row.uid,jdbcType=INTEGER},
      </if>
      <if test="row.username != null">
        username = #{row.username,jdbcType=VARCHAR},
      </if>
      <if test="row.password != null">
        `password` = #{row.password,jdbcType=VARCHAR},
      </if>
      <if test="row.nickname != null">
        nickname = #{row.nickname,jdbcType=VARCHAR},
      </if>
      <if test="row.avatar != null">
        avatar = #{row.avatar,jdbcType=VARCHAR},
      </if>
      <if test="row.background != null">
        background = #{row.background,jdbcType=VARCHAR},
      </if>
      <if test="row.gender != null">
        gender = #{row.gender,jdbcType=TINYINT},
      </if>
      <if test="row.description != null">
        description = #{row.description,jdbcType=VARCHAR},
      </if>
      <if test="row.exp != null">
        `exp` = #{row.exp,jdbcType=INTEGER},
      </if>
      <if test="row.coin != null">
        coin = #{row.coin,jdbcType=DOUBLE},
      </if>
      <if test="row.vip != null">
        vip = #{row.vip,jdbcType=TINYINT},
      </if>
      <if test="row.state != null">
        `state` = #{row.state,jdbcType=TINYINT},
      </if>
      <if test="row.role != null">
        `role` = #{row.role,jdbcType=TINYINT},
      </if>
      <if test="row.auth != null">
        auth = #{row.auth,jdbcType=TINYINT},
      </if>
      <if test="row.authMsg != null">
        auth_msg = #{row.authMsg,jdbcType=VARCHAR},
      </if>
      <if test="row.createDate != null">
        create_date = #{row.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.deleteDate != null">
        delete_date = #{row.deleteDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set `uid` = #{row.uid,jdbcType=INTEGER},
      username = #{row.username,jdbcType=VARCHAR},
      `password` = #{row.password,jdbcType=VARCHAR},
      nickname = #{row.nickname,jdbcType=VARCHAR},
      avatar = #{row.avatar,jdbcType=VARCHAR},
      background = #{row.background,jdbcType=VARCHAR},
      gender = #{row.gender,jdbcType=TINYINT},
      description = #{row.description,jdbcType=VARCHAR},
      `exp` = #{row.exp,jdbcType=INTEGER},
      coin = #{row.coin,jdbcType=DOUBLE},
      vip = #{row.vip,jdbcType=TINYINT},
      `state` = #{row.state,jdbcType=TINYINT},
      `role` = #{row.role,jdbcType=TINYINT},
      auth = #{row.auth,jdbcType=TINYINT},
      auth_msg = #{row.authMsg,jdbcType=VARCHAR},
      create_date = #{row.createDate,jdbcType=TIMESTAMP},
      delete_date = #{row.deleteDate,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.onlineexam.domain.User">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="background != null">
        background = #{background,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="exp != null">
        `exp` = #{exp,jdbcType=INTEGER},
      </if>
      <if test="coin != null">
        coin = #{coin,jdbcType=DOUBLE},
      </if>
      <if test="vip != null">
        vip = #{vip,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=TINYINT},
      </if>
      <if test="auth != null">
        auth = #{auth,jdbcType=TINYINT},
      </if>
      <if test="authMsg != null">
        auth_msg = #{authMsg,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteDate != null">
        delete_date = #{deleteDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.onlineexam.domain.User">
    update users
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      background = #{background,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR},
      `exp` = #{exp,jdbcType=INTEGER},
      coin = #{coin,jdbcType=DOUBLE},
      vip = #{vip,jdbcType=TINYINT},
      `state` = #{state,jdbcType=TINYINT},
      `role` = #{role,jdbcType=TINYINT},
      auth = #{auth,jdbcType=TINYINT},
      auth_msg = #{authMsg,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      delete_date = #{deleteDate,jdbcType=TIMESTAMP}
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
</mapper>