<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.onlineexam.mapper.UserVideoMapper">
  <resultMap id="BaseResultMap" type="com.example.onlineexam.domain.UserVideo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="vid" jdbcType="INTEGER" property="vid" />
    <result column="play" jdbcType="INTEGER" property="play" />
    <result column="love" jdbcType="TINYINT" property="love" />
    <result column="unlove" jdbcType="TINYINT" property="unlove" />
    <result column="coin" jdbcType="TINYINT" property="coin" />
    <result column="collect" jdbcType="TINYINT" property="collect" />
    <result column="play_time" jdbcType="TIMESTAMP" property="playTime" />
    <result column="love_time" jdbcType="TIMESTAMP" property="loveTime" />
    <result column="coin_time" jdbcType="TIMESTAMP" property="coinTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `uid`, vid, play, love, unlove, coin, `collect`, play_time, love_time, coin_time
  </sql>
  <select id="selectByExample" parameterType="com.example.onlineexam.domain.UserVideoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_video
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_video
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.onlineexam.domain.UserVideoExample">
    delete from user_video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.onlineexam.domain.UserVideo">
    insert into user_video (id, `uid`, vid, 
      play, love, unlove, 
      coin, `collect`, play_time, 
      love_time, coin_time)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{vid,jdbcType=INTEGER}, 
      #{play,jdbcType=INTEGER}, #{love,jdbcType=TINYINT}, #{unlove,jdbcType=TINYINT}, 
      #{coin,jdbcType=TINYINT}, #{collect,jdbcType=TINYINT}, #{playTime,jdbcType=TIMESTAMP}, 
      #{loveTime,jdbcType=TIMESTAMP}, #{coinTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.onlineexam.domain.UserVideo">
    insert into user_video
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="vid != null">
        vid,
      </if>
      <if test="play != null">
        play,
      </if>
      <if test="love != null">
        love,
      </if>
      <if test="unlove != null">
        unlove,
      </if>
      <if test="coin != null">
        coin,
      </if>
      <if test="collect != null">
        `collect`,
      </if>
      <if test="playTime != null">
        play_time,
      </if>
      <if test="loveTime != null">
        love_time,
      </if>
      <if test="coinTime != null">
        coin_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="vid != null">
        #{vid,jdbcType=INTEGER},
      </if>
      <if test="play != null">
        #{play,jdbcType=INTEGER},
      </if>
      <if test="love != null">
        #{love,jdbcType=TINYINT},
      </if>
      <if test="unlove != null">
        #{unlove,jdbcType=TINYINT},
      </if>
      <if test="coin != null">
        #{coin,jdbcType=TINYINT},
      </if>
      <if test="collect != null">
        #{collect,jdbcType=TINYINT},
      </if>
      <if test="playTime != null">
        #{playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loveTime != null">
        #{loveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="coinTime != null">
        #{coinTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.onlineexam.domain.UserVideoExample" resultType="java.lang.Long">
    select count(*) from user_video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_video
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.uid != null">
        `uid` = #{row.uid,jdbcType=INTEGER},
      </if>
      <if test="row.vid != null">
        vid = #{row.vid,jdbcType=INTEGER},
      </if>
      <if test="row.play != null">
        play = #{row.play,jdbcType=INTEGER},
      </if>
      <if test="row.love != null">
        love = #{row.love,jdbcType=TINYINT},
      </if>
      <if test="row.unlove != null">
        unlove = #{row.unlove,jdbcType=TINYINT},
      </if>
      <if test="row.coin != null">
        coin = #{row.coin,jdbcType=TINYINT},
      </if>
      <if test="row.collect != null">
        `collect` = #{row.collect,jdbcType=TINYINT},
      </if>
      <if test="row.playTime != null">
        play_time = #{row.playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.loveTime != null">
        love_time = #{row.loveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.coinTime != null">
        coin_time = #{row.coinTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_video
    set id = #{row.id,jdbcType=INTEGER},
      `uid` = #{row.uid,jdbcType=INTEGER},
      vid = #{row.vid,jdbcType=INTEGER},
      play = #{row.play,jdbcType=INTEGER},
      love = #{row.love,jdbcType=TINYINT},
      unlove = #{row.unlove,jdbcType=TINYINT},
      coin = #{row.coin,jdbcType=TINYINT},
      `collect` = #{row.collect,jdbcType=TINYINT},
      play_time = #{row.playTime,jdbcType=TIMESTAMP},
      love_time = #{row.loveTime,jdbcType=TIMESTAMP},
      coin_time = #{row.coinTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.onlineexam.domain.UserVideo">
    update user_video
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=INTEGER},
      </if>
      <if test="vid != null">
        vid = #{vid,jdbcType=INTEGER},
      </if>
      <if test="play != null">
        play = #{play,jdbcType=INTEGER},
      </if>
      <if test="love != null">
        love = #{love,jdbcType=TINYINT},
      </if>
      <if test="unlove != null">
        unlove = #{unlove,jdbcType=TINYINT},
      </if>
      <if test="coin != null">
        coin = #{coin,jdbcType=TINYINT},
      </if>
      <if test="collect != null">
        `collect` = #{collect,jdbcType=TINYINT},
      </if>
      <if test="playTime != null">
        play_time = #{playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loveTime != null">
        love_time = #{loveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="coinTime != null">
        coin_time = #{coinTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.onlineexam.domain.UserVideo">
    update user_video
    set `uid` = #{uid,jdbcType=INTEGER},
      vid = #{vid,jdbcType=INTEGER},
      play = #{play,jdbcType=INTEGER},
      love = #{love,jdbcType=TINYINT},
      unlove = #{unlove,jdbcType=TINYINT},
      coin = #{coin,jdbcType=TINYINT},
      `collect` = #{collect,jdbcType=TINYINT},
      play_time = #{playTime,jdbcType=TIMESTAMP},
      love_time = #{loveTime,jdbcType=TIMESTAMP},
      coin_time = #{coinTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>